<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<bean id="employeeDAO" class="hello.EmployeeDAOImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Create a proxy to generate session-scoped baskets -->
	<bean id="basket" class="com.netbuilder.session.Basket" scope="session">
		<!-- This requires CGLIB -->
		<aop:scoped-proxy />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/tester" />
		<property name="username" value="root" />
		<property name="password" value="netbuilder" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="port" value="465" />
        <!-- <property name="username" value="xxxx@yyy.com" /> -->
        <property name="username" value="chrisofski@gmail.com" />
        <property name="password" value="Vibranium" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">stmp</prop>
                <prop key="mail.smtp.host">smtp.gmail.com</prop>
                <prop key="mail.smtps.auth">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.port">25</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.enable">false</prop>
                <prop key="mail.smtp.ssl.trust">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.socketFactory.fallback">true</prop>
            </props>
        </property>
	</bean>

	<!-- THYMELEAF: Template Resolver for email templates -->
	<bean id="emailTemplateResolver"
		class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
		<property name="prefix" value="mail/" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="order" value="1" />
	</bean>

	<!-- THYMELEAF: Template Resolver for webapp pages -->
	<!-- (we would not need this if our app was not web) -->
	<bean id="webTemplateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="order" value="2" />
	</bean>

	<!-- THYMELEAF: Template Engine (Spring3-specific version) -->
	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="emailTemplateResolver" />
				<ref bean="webTemplateResolver" />
			</set>
		</property>
	</bean>

	<!-- THYMELEAF: View Resolver - implementation of Spring's ViewResolver 
		interface -->
	<!-- (we would not need this if our app was not web) -->
	<bean id="viewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>
	
	<bean id="mailInfo" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="port" value="465" />
        <!-- <property name="username" value="xxxx@yyy.com" /> -->
        <property name="username" value="chrisofski@gmail.com" />
        <property name="password" value="Vibranium" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">stmp</prop>
                <prop key="mail.smtp.host">smtp.gmail.com</prop>
                <prop key="mail.smtps.auth">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.port">25</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.enable">false</prop>
                <prop key="mail.smtp.ssl.trust">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.socketFactory.fallback">true</prop>
            </props>
        </property>
    </bean>
</beans>